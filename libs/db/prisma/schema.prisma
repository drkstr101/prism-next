generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enumerated Types
////////

enum AppPermission {
  manuscript_delete @map("manuscript.delete")
  channels_delete   @map("channels.delete")
  messages_delete   @map("messages.delete")

  @@map("app_permission")
}

enum AppRole {
  admin
  editor
  referee

  @@map("app_role")
}

enum UserStatus {
  ONLINE
  OFFLINE

  @@map("user_status")
}

// Domain Models
////////

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Channel {
  id          BigInt    @id @default(autoincrement())
  inserted_at DateTime  @default(dbgenerated("timezone('est'::text, now())")) @db.Timestamptz(6)
  slug        String    @unique
  created_by  String    @db.Uuid
  user        User      @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  messages    Message[]

  @@map("channels")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Message {
  id          BigInt   @id @default(autoincrement())
  inserted_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  message     String?
  user_id     String   @db.Uuid
  channel_id  BigInt
  channel     Channel  @relation(fields: [channel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user        User     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("messages")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model RolePermission {
  id         BigInt        @id @default(autoincrement())
  role       AppRole
  permission AppPermission

  @@unique([role, permission])
  @@map("role_permissions")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model UserRole {
  id      BigInt  @id @default(autoincrement())
  user_id String  @db.Uuid
  role    AppRole
  user    User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, role])
  @@map("user_roles")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id       String      @id @db.Uuid
  username String?
  status   UserStatus? @default(OFFLINE)
  channels Channel[]
  messages Message[]
  roles    UserRole[]

  @@map("users")
}
